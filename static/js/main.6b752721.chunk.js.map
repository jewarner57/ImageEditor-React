{"version":3,"sources":["actions/index.js","components/EditorButton/index.js","components/ImageUpload/index.js","components/AddText/index.js","components/SettingsModal/index.js","components/ClearCanvas/index.js","components/VerticalToolbar/index.js","components/DeleteItem/index.js","components/BringForward/index.js","components/SendBackward/index.js","components/SettingInput/index.js","components/ChangeTextSettings/index.js","components/ChangeImageSettings/index.js","components/Deselect/index.js","components/CropImage/index.js","components/SelectedObjectToolbar/index.js","components/CanvasDetails/index.js","components/Canvas/index.js","components/DownloadAsImage/index.js","reducers/canvasObjectsReducer.js","reducers/selectedObjectReducer.js","reducers/index.js","components/App/index.js","reportWebVitals.js","index.js"],"names":["ADD_OBJECT","REMOVE_OBJECT","CLEAR_OBJECTS","UPDATE_OBJECT","SET_SELECTED_OBJECT","addToCanvas","obj","type","payload","removeFromCanvas","updateObject","setSelectedObject","EditorButton","props","clickAction","icon","tooltip","className","onClick","e","title","ImageUpload","dispatch","useDispatch","useState","inputElement","setInputElement","click","xmlns","width","height","viewBox","d","ref","input","onChange","event","img","Image","src","URL","createObjectURL","target","files","id","uuidv4","onload","imgObj","url","xPos","yPos","isBeingCropped","isBeingDragged","dragStartX","dragStartY","sizeProportion","sx","sy","sWidth","sHeight","handleChange","AddText","text","textObj","font","fontSize","length","color","SettingsModal","contents","exitAction","header","ClearCanvas","modalOpen","setModalOpen","VerticalToolbar","map","element","index","DeleteItem","selectedItem","useSelector","state","selectedObject","fillRule","clipRule","BringForward","zIndex","SendBackward","SettingInput","label","changeAction","initialVal","inputVal","setInputVal","value","ChangeTextSettings","textColor","setTextColor","setNewTextSize","slice","Number","ChangeImageSettings","scaleProportionally","setScaleProporionally","toFixed","checked","Deselect","CropImage","rectIDs","setRectIDs","createNewRect","x","y","position","handleLocation","parentID","parent","console","log","SelectedObjectToolbar","itemSpecificTools","CanvasDetails","setWidth","setHeight","mouseX","mouseY","displayedWidth","setDisplayedWidth","displayedHeight","setDisplayedHeight","onBlur","Canvas","setCanvas","canvasObjects","selectedObjectID","selectObject","canvasWidth","setCanvasWidth","canvasHeight","setCanvasHeight","setMouseX","setMouseY","objectsOnCanvas","canvasRef","useRef","handleMouseUp","forEach","updatedObj","updateImageCrop","getEventCanvasCoordinates","bound","getBoundingClientRect","clientX","left","clientLeft","clientY","top","clientTop","getClickedObj","clickedObj","undefined","touchesObj","handle","topHandleX","topHandleY","bottomHandleX","bottomHandleY","useEffect","canvas","current","requestId","ctx","getContext","images","draw","clearRect","sort","a","b","drawImage","onerror","err","textBaseline","fillStyle","fillText","fillRect","lineWidth","strokeStyle","strokeRect","requestAnimationFrame","cancelAnimationFrame","onMouseDown","mousePos","clickedElem","handleMouseDown","onMouseLeave","onMouseUp","onMouseMove","handleMouseMove","handleClick","DownloadAsImage","linkRef","setLinkRef","showModal","setShowModal","String","Date","getTime","download","setDownload","href","setTimeout","toDataURL","downloadCanvas","canvasObjectsReducer","action","objForUpdate","objToRemove","filter","canvasObject","selectedObjectReducer","combineReducers","store","createStore","rootReducer","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6b752721.chunk.js","sourcesContent":["export const ADD_OBJECT = 'ADD_OBJECT'\nexport const REMOVE_OBJECT = 'REMOVE_OBJECT'\nexport const CLEAR_OBJECTS = 'CLEAR_OBJECTS'\nexport const UPDATE_OBJECT = 'UPDATE_OBJECT'\nexport const SET_SELECTED_OBJECT = 'SET_SELECTED_OBJECT'\n\nexport const addToCanvas = (obj) => {\n  return {\n    type: ADD_OBJECT,\n    payload: { obj }\n  }\n}\n\nexport const removeFromCanvas = (obj) => {\n  return {\n    type: REMOVE_OBJECT,\n    payload: { obj }\n  }\n}\n\nexport const clearCanvas = (obj) => {\n  return {\n    type: CLEAR_OBJECTS,\n    payload: { obj }\n  }\n}\n\nexport const updateObject = (obj) => {\n  return {\n    type: UPDATE_OBJECT,\n    payload: { obj }\n  }\n}\n\nexport const setSelectedObject = (obj) => {\n  return {\n    type: SET_SELECTED_OBJECT,\n    payload: { obj }\n  }\n}","import './style.css'\n\nfunction EditorButton(props) {\n  const { clickAction, icon, tooltip } = props\n\n  return (\n    <div\n      className=\"editorButton\" onClick={(e) => clickAction(e)}\n      title={tooltip}>\n      {icon}\n    </div>\n  )\n}\n\nexport default EditorButton","import { useDispatch } from 'react-redux';\nimport { useState } from 'react'\nimport { addToCanvas, setSelectedObject } from '../../actions';\nimport { v4 as uuidv4 } from 'uuid';\nimport EditorButton from '../EditorButton'\nimport './style.css'\n\nfunction ImageUpload(props) {\n  const dispatch = useDispatch()\n  const [inputElement, setInputElement] = useState();\n\n  const handleChange = (event) => {\n\n    const img = new Image()\n    img.src = URL.createObjectURL(event.target.files[0])\n    const id = uuidv4()\n\n    img.onload = () => {\n      const imgObj = {\n        type: 'image',\n        id: id,\n        url: img.src,\n        xPos: 0,\n        yPos: 0,\n        width: img.width,\n        height: img.height,\n        isBeingCropped: false,\n        isBeingDragged: false,\n        dragStartX: 0,\n        dragStartY: 0,\n        sizeProportion: img.height / img.width,\n        sx: 0,\n        sy: 0,\n        sWidth: img.width,\n        sHeight: img.height,\n      }\n\n      dispatch(addToCanvas(imgObj))\n      dispatch(setSelectedObject(imgObj))\n    }\n\n  }\n\n  const uploadFile = (e) => {\n    inputElement.click()\n  }\n\n  return (\n    <div className=\"ImageUpload\">\n\n      <EditorButton\n        clickAction={uploadFile}\n        icon={<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"28\" height=\"28\" viewBox=\"0 0 24 24\"><path d=\"M5 8.5c0-.828.672-1.5 1.5-1.5s1.5.672 1.5 1.5c0 .829-.672 1.5-1.5 1.5s-1.5-.671-1.5-1.5zm9 .5l-2.519 4-2.481-1.96-4 5.96h14l-5-8zm8-4v14h-20v-14h20zm2-2h-24v18h24v-18z\" /></svg>}\n        tooltip=\"Upload Image\"\n      />\n\n      <input\n        className=\"uploadInput\"\n        type=\"file\"\n        ref={input => setInputElement(input)}\n        onChange={(e) => handleChange(e)}\n      />\n    </div>\n  )\n}\n\nexport default ImageUpload","import './style.css'\nimport EditorButton from '../EditorButton'\nimport { useDispatch } from 'react-redux'\nimport { addToCanvas, setSelectedObject } from '../../actions';\nimport { v4 as uuidv4 } from 'uuid';\n\nfunction AddText(props) {\n  const dispatch = useDispatch()\n\n  const addTextToCanvas = () => {\n    const text = 'Hello World'\n    const font = 'monospace'\n    const fontSize = 50\n\n    const textObj = {\n      type: 'text',\n      id: uuidv4(),\n      text: text,\n      font: font,\n      fontSize: `${fontSize}px`,\n      xPos: 10,\n      yPos: fontSize,\n      width: fontSize * 0.6 * text.length,\n      height: fontSize,\n      isBeingDragged: false,\n      dragStartX: 0,\n      dragStartY: 0,\n      color: '#000000'\n    }\n\n    dispatch(addToCanvas(textObj))\n    dispatch(setSelectedObject(textObj))\n  }\n\n  return (\n    <div className=\"AddText\">\n      <EditorButton\n        clickAction={addTextToCanvas}\n        icon={<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M22 0h-20v6h1.999c0-1.174.397-3 2.001-3h4v16.874c0 1.174-.825 2.126-2 2.126h-1v2h9.999v-2h-.999c-1.174 0-2-.952-2-2.126v-16.874h4c1.649 0 2.02 1.826 2.02 3h1.98v-6z\" /></svg>}\n        tooltip=\"Insert Text\"\n      />\n    </div>\n  )\n}\n\nexport default AddText","import './style.css'\n\nfunction SettingsModal(props) {\n  const { contents, exitAction, header } = props\n\n  return (\n    <div className=\"SettingsModal\">\n      <div className='header'>\n        <div className=\"headerTitle\">{header}</div>\n        <div className='closeModal' onClick={() => { exitAction(false) }}>X</div>\n      </div>\n      {contents}\n    </div >\n  )\n}\n\nexport default SettingsModal","import EditorButton from '../EditorButton'\nimport SettingsModal from '../SettingsModal';\nimport { useDispatch } from 'react-redux'\nimport { useState } from 'react'\nimport { clearCanvas } from '../../actions';\n\nimport './style.css'\n\nfunction ClearCanvas(props) {\n  const dispatch = useDispatch()\n  const [modalOpen, setModalOpen] = useState(false)\n\n  return (\n    <div className=\"ClearCanvas\">\n      <EditorButton\n        clickAction={() => setModalOpen(!modalOpen)}\n        icon={<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M24 20.188l-8.315-8.209 8.2-8.282-3.697-3.697-8.212 8.318-8.31-8.203-3.666 3.666 8.321 8.24-8.206 8.313 3.666 3.666 8.237-8.318 8.285 8.203z\" /></svg>}\n        tooltip=\"Clear Canvas\"\n      />\n      {modalOpen ?\n        <SettingsModal header=\"Delete All\" exitAction={setModalOpen}\n          contents={\n            <div className=\"clearCanvasModal\">\n              <div>Are you sure you want to clear the canvas?</div>\n              <div className=\"modalButtonWrapper\">\n                <div className=\"cancelButton modalButton\" onClick={() => setModalOpen(false)}>Cancel</div>\n                <div className=\"clearButton modalButton\"\n                  onClick={() => {\n                    dispatch(clearCanvas())\n                    setModalOpen(false)\n                  }}>Clear</div>\n              </div>\n            </div>\n          }\n        />\n        : \"\"}\n    </div>\n  )\n}\n\nexport default ClearCanvas","import './style.css'\n\nfunction VerticalToolbar(props) {\n\n  return (\n    <div\n      className=\"VerticalToolbar\"\n    >\n      {props.contents.map((element, index) => {\n        return (\n          <div key={index}>{element}</div>\n        )\n      })}\n    </div>\n  )\n}\n\nexport default VerticalToolbar","import EditorButton from '../EditorButton'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { removeFromCanvas, setSelectedObject } from '../../actions';\n\nfunction DeleteItem(props) {\n  const selectedItem = useSelector(state => state.selectedObject)\n  const dispatch = useDispatch()\n\n  return (\n    <div className=\"DeleteItem\">\n      <EditorButton\n        clickAction={\n          () => {\n            dispatch(removeFromCanvas(selectedItem))\n            dispatch(setSelectedObject(false))\n          }}\n        icon={<svg width=\"30\" height=\"24\" xmlns=\"http://www.w3.org/2000/svg\" fillRule=\"evenodd\" clipRule=\"evenodd\"><path d=\"M5.662 23l-5.369-5.365c-.195-.195-.293-.45-.293-.707 0-.256.098-.512.293-.707l14.929-14.928c.195-.194.451-.293.707-.293.255 0 .512.099.707.293l7.071 7.073c.196.195.293.451.293.708 0 .256-.097.511-.293.707l-11.216 11.219h5.514v2h-12.343zm3.657-2l-5.486-5.486-1.419 1.414 4.076 4.072h2.829zm.456-11.429l-4.528 4.528 5.658 5.659 4.527-4.53-5.657-5.657z\" /></svg>}\n        tooltip={`Delete ${selectedItem.type}`}\n      />\n    </div>\n  )\n}\n\nexport default DeleteItem","import EditorButton from '../EditorButton'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { updateObject } from '../../actions';\n\nfunction BringForward(props) {\n  const selectedItem = useSelector(state => state.selectedObject)\n  const dispatch = useDispatch()\n\n  return (\n    <div className=\"BringForward\">\n      <EditorButton\n        clickAction={\n          () => {\n            selectedItem.zIndex += 1\n            dispatch(updateObject(selectedItem))\n          }}\n        icon={<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M12 3l12 18h-24z\" /></svg>}\n        tooltip={`Bring Forward`}\n      />\n    </div>\n  )\n}\n\nexport default BringForward","import EditorButton from '../EditorButton'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { updateObject } from '../../actions';\n\nfunction SendBackward(props) {\n  const selectedItem = useSelector(state => state.selectedObject)\n  const dispatch = useDispatch()\n\n  return (\n    <div className=\"SendBackward\">\n      <EditorButton\n        clickAction={\n          () => {\n            selectedItem.zIndex -= 1\n            dispatch(updateObject(selectedItem))\n          }}\n        icon={<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M12 21l-12-18h24z\" /></svg>}\n        tooltip={`Send Backward`}\n      />\n    </div>\n  )\n}\n\nexport default SendBackward","import { useState } from 'react'\nimport './style.css'\n\nfunction SettingInput(props) {\n  const { label, changeAction, initialVal } = props\n  const [inputVal, setInputVal] = useState(initialVal)\n\n  return (\n    <div>\n      <label>\n        <div>{label}:</div>\n        <input\n          value={inputVal}\n          onChange={\n            (e) => {\n              setInputVal(e.target.value)\n              changeAction(e)\n            }\n          }\n        />\n      </label>\n    </div>\n  )\n}\n\nexport default SettingInput","import EditorButton from '../EditorButton'\nimport SettingsModal from '../SettingsModal'\nimport SettingInput from '../SettingInput'\nimport { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { updateObject } from '../../actions';\nimport './style.css'\n\nfunction ChangeTextSettings(props) {\n  const selectedItem = useSelector(state => state.selectedObject)\n  const [modalOpen, setModalOpen] = useState(false)\n  const [textColor, setTextColor] = useState(selectedItem.color)\n  const dispatch = useDispatch()\n\n  const setNewTextSize = (textObj) => {\n    selectedItem.width = textObj.fontSize.slice(0, -2) * 0.6 * textObj.text.length\n    selectedItem.height = Number(selectedItem.fontSize.slice(0, -2))\n    dispatch(updateObject(selectedItem))\n  }\n\n  return (\n    <div className=\"ChangeTextSettings\">\n      <EditorButton\n        clickAction={() => { setModalOpen(!modalOpen) }}\n        icon={<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M24 20v1h-4v-1h.835c.258 0 .405-.178.321-.422l-.473-1.371h-2.231l-.575-1.59h2.295l-1.362-4.077-1.154 3.451-.879-2.498.921-2.493h2.222l3.033 8.516c.111.315.244.484.578.484h.469zm-6-1h1v2h-7v-2h.532c.459 0 .782-.453.633-.887l-.816-2.113h-6.232l-.815 2.113c-.149.434.174.887.633.887h1.065v2h-7v-2h.43c.593 0 1.123-.375 1.32-.935l5.507-15.065h3.952l5.507 15.065c.197.56.69.935 1.284.935zm-10.886-6h4.238l-2.259-6.199-1.979 6.199z\" /></svg>}\n        tooltip=\"Text Settings\"\n      />\n\n      {modalOpen ?\n        <SettingsModal\n          exitAction={setModalOpen}\n          header=\"Edit Textbox\"\n          contents={\n            <div className=\"modalContents\">\n              <SettingInput\n                label=\"Text\"\n                initialVal={selectedItem.text}\n                changeAction={\n                  (e) => {\n                    selectedItem.text = e.target.value\n                    setNewTextSize(selectedItem)\n                  }\n                }\n              />\n\n              <SettingInput\n                label=\"Size\"\n                initialVal={selectedItem.fontSize.slice(0, -2)}\n                changeAction={\n                  (e) => {\n                    selectedItem.fontSize = e.target.value + 'px'\n                    setNewTextSize(selectedItem)\n                  }\n                }\n              />\n\n              <label>\n                <div>Color:</div>\n                <input\n                  value={textColor}\n                  type=\"color\"\n                  onChange={\n                    (e) => {\n                      setTextColor(e.target.value)\n                      selectedItem.color = e.target.value\n                      dispatch(updateObject(selectedItem))\n                    }\n                  }\n                />\n              </label>\n            </div>\n          } />\n        : ''}\n    </div>\n  )\n}\n\nexport default ChangeTextSettings","import EditorButton from '../EditorButton'\nimport SettingsModal from '../SettingsModal'\nimport SettingInput from '../SettingInput'\nimport { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { updateObject } from '../../actions';\nimport './style.css'\n\nfunction ChangeImageSettings(props) {\n  const selectedItem = useSelector(state => state.selectedObject)\n  const [modalOpen, setModalOpen] = useState(false)\n  const [scaleProportionally, setScaleProporionally] = useState(true)\n  const dispatch = useDispatch()\n\n  return (\n    <div className=\"ChangeTextSettings\">\n      <EditorButton\n        clickAction={() => { setModalOpen(!modalOpen) }}\n        icon={<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"30\" height=\"30\" viewBox=\"0 0 24 24\"><path d=\"M15.562 20.22l-3.562.718.719-3.562 2.843 2.844zm-2.136-3.552l2.844 2.845 7.73-7.73-2.845-2.845-7.729 7.73zm-2.91.332l4.51-4.76-2.026-3.24-2.52 4-2.48-1.96-4 5.96h6.516zm-3.516-8.5c0-.828-.672-1.5-1.5-1.5s-1.5.672-1.5 1.5c0 .829.672 1.5 1.5 1.5s1.5-.671 1.5-1.5zm3.352 10.5h-8.352v-14h18v2.312h2v-4.312h-22v18h9.969l.383-2z\" /></svg>}\n        tooltip=\"Image Settings\"\n      />\n\n      {modalOpen ?\n        <SettingsModal\n          exitAction={setModalOpen}\n          header=\"Edit Image\"\n          contents={\n            <div className=\"modalContents\">\n              <SettingInput\n                label=\"Width\"\n                initialVal={selectedItem.width}\n                changeAction={\n                  (e) => {\n                    selectedItem.width = Number(e.target.value)\n                    dispatch(updateObject(selectedItem))\n\n                    if (scaleProportionally) {\n                      selectedItem.height = (Number(e.target.value * selectedItem.sizeProportion).toFixed(2))\n                    }\n                  }\n                }\n              />\n\n              {\n                scaleProportionally ? '' :\n                  <SettingInput\n                    label=\"Height\"\n                    initialVal={selectedItem.height}\n                    changeAction={\n                      (e) => {\n                        selectedItem.height = Number(e.target.value.toFixed(2))\n                        dispatch(updateObject(selectedItem))\n                      }\n                    }\n                  />\n              }\n\n              {/* Keep image dimensions checkbox */}\n              {/* Add check box */}\n              <label>\n                <div>Scale Proportionally</div>\n                <input\n                  checked={scaleProportionally}\n                  onChange={() => setScaleProporionally(!scaleProportionally)}\n                  type=\"checkbox\"\n                />\n              </label>\n              {/* Display bottom if not check */}\n              {/* If not checked then width slider should also update height based in the image ratio */}\n\n            </div>\n          } />\n        : ''}\n    </div>\n  )\n}\n\nexport default ChangeImageSettings","import EditorButton from '../EditorButton'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { setSelectedObject } from '../../actions';\n\nfunction Deselect(props) {\n  const selectedItem = useSelector(state => state.selectedObject)\n  const dispatch = useDispatch()\n\n  return (\n    <div className=\"Deselect\">\n      <EditorButton\n        clickAction={\n          () => {\n            dispatch(setSelectedObject(false))\n          }}\n        icon={<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M11 24v-2h-4v2h4zm8-22h3v3h2v-5h-5v2zm-19 15h2v-4h-2v4zm0-6h2v-4h-2v4zm2-6v-3h3v-2h-5v5h2zm22 2h-2v4h2v-4zm0 6h-2v4h2v-4zm-2 6v3h-3v2h5v-5h-2zm-17 3h-3v-3h-2v5h5v-2zm12 2v-2h-4v2h4zm-6-22v-2h-4v2h4zm6 0v-2h-4v2h4zm0 11h-10v-2h10v2z\" /></svg>}\n        tooltip={`Deselect ${selectedItem.type}`}\n      />\n    </div>\n  )\n}\n\nexport default Deselect","import EditorButton from '../EditorButton'\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { updateObject, addToCanvas, removeFromCanvas } from '../../actions';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport './style.css'\n\nfunction CropImage(props) {\n  const selectedItem = useSelector(state => state.selectedObject)\n  const dispatch = useDispatch()\n  const [rectIDs, setRectIDs] = useState([])\n\n  const createNewRect = (x, y, width, height, position) => {\n    const id = uuidv4()\n\n    dispatch(addToCanvas({\n      type: 'handle',\n      id: id,\n      xPos: x,\n      yPos: y,\n      width: width,\n      height: height,\n      handleLocation: position,\n      isBeingDragged: false,\n      isBeingCropped: false,\n      parentID: selectedItem.id,\n      dragStartX: 0,\n      dragStartY: 0,\n      color: '#000000',\n      parent: selectedItem.id\n    }))\n\n    return id\n  }\n\n  return (\n    <div className=\"CropImage\">\n      <EditorButton\n        clickAction={\n          () => {\n            selectedItem.isBeingCropped = !selectedItem.isBeingCropped\n            dispatch(updateObject(selectedItem))\n            // If a crop is starting\n            if (selectedItem.isBeingCropped) {\n              setRectIDs([\n                createNewRect(selectedItem.xPos, selectedItem.yPos, 30, 30, 'top'),\n                createNewRect(Number(selectedItem.width) + Number(selectedItem.xPos) - 30, Number(selectedItem.height) + Number(selectedItem.yPos) - 30, 30, 30, 'bottom')\n              ])\n              console.log()\n            }\n            else {\n              dispatch(removeFromCanvas({ id: rectIDs[0] }))\n              dispatch(removeFromCanvas({ id: rectIDs[1] }))\n            }\n          }\n        }\n        icon={<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"30\" height=\"30\" viewBox=\"0 0 24 24\"><path d=\"M24 18h-4v-14h-14v-4h-2v4h-4v2h4v14h14v4h2v-4h4v-2zm-18 0v-12h12v12h-12zm2-8.5c0-.828.672-1.5 1.5-1.5s1.5.672 1.5 1.5-.672 1.5-1.5 1.5-1.5-.672-1.5-1.5zm5.292.5l-1.812 3.833-1.48-1.272-2 3.439h8.292l-3-6z\" /></svg>}\n        tooltip=\"Crop Image\"\n      />\n    </div>\n  )\n}\n\nexport default CropImage","import VerticalToolbar from '../VerticalToolbar'\nimport DeleteItem from '../DeleteItem'\nimport BringForward from '../BringForward'\nimport SendBackward from '../SendBackward'\nimport ChangeTextSettings from '../ChangeTextSettings'\nimport ChangeImageSettings from '../ChangeImageSettings'\nimport Deselect from '../Deselect'\nimport CropImage from '../CropImage'\nimport { useSelector } from 'react-redux'\nimport './style.css'\n\nfunction SelectedObjectToolbar(props) {\n\n  const selectedItem = useSelector(state => state.selectedObject)\n\n  const itemSpecificTools = (type) => {\n    switch (type) {\n      case 'text':\n        return [<ChangeTextSettings />]\n      case 'image':\n        return [<ChangeImageSettings />, <CropImage />]\n      default:\n        return []\n    }\n  }\n\n  return (\n    <div className=\"SelectedObjectToolbar\">\n      {\n\n        <VerticalToolbar\n          contents={\n            selectedItem ?\n              [\n                ...itemSpecificTools(selectedItem.type),\n                < DeleteItem />,\n                <BringForward />,\n                <SendBackward />,\n                <Deselect />\n              ]\n              :\n              []\n          }\n        />\n\n      }\n    </div >\n  )\n}\n\nexport default SelectedObjectToolbar","import React, { useState } from 'react'\nimport './style.css'\n\nfunction CanvasDetails(props) {\n  const { width, height, setWidth, setHeight, mouseX, mouseY } = props\n  const [displayedWidth, setDisplayedWidth] = useState(width)\n  const [displayedHeight, setDisplayedHeight] = useState(height)\n\n  return (\n    <div className=\"CanvasDetails\">\n      <div className=\"sizeDetailWrapper\">\n        <div className=\"sizeDetail\">\n          <p>Width:</p>\n          <input\n            className=\"sizeInput\"\n            value={displayedWidth}\n            onBlur={(e) => { setWidth(e.target.value) }}\n            onChange={(e) => setDisplayedWidth(e.target.value)}\n          />\n        </div>\n        <div className=\"sizeDetail\">\n          <p>Height:</p>\n          <input\n            className=\"sizeInput\"\n            value={displayedHeight}\n            onBlur={(e) => { setHeight(e.target.value) }}\n            onChange={(e) => setDisplayedHeight(e.target.value)}\n          />\n        </div>\n      </div>\n      <p>X: {mouseX}, Y: {mouseY}</p>\n    </div>\n  )\n}\n\nexport default CanvasDetails","import React, { useRef, useEffect, useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { updateObject, setSelectedObject, removeFromCanvas } from '../../actions';\nimport CanvasDetails from '../CanvasDetails'\nimport './style.css'\n\nconst Canvas = (props) => {\n\n  const { setCanvas } = props\n  const canvasObjects = useSelector(state => state.canvasObjects)\n  let selectedObjectID = useSelector(state => state.selectedObject).id\n  let selectObject = useSelector(state => state.selectedObject)\n\n  const [canvasWidth, setCanvasWidth] = useState(800)\n  const [canvasHeight, setCanvasHeight] = useState(600)\n  const [mouseX, setMouseX] = useState(0)\n  const [mouseY, setMouseY] = useState(0)\n\n  // Get a list of canvas objects\n  const objectsOnCanvas = useSelector(state => state.canvasObjects)\n  const canvasRef = useRef(null)\n  const dispatch = useDispatch()\n\n  const handleClick = (e) => {\n    const mousePos = getEventCanvasCoordinates(e)\n    const clickedObj = getClickedObj(mousePos.x, mousePos.y)\n\n    // If an object was clicked\n    if (clickedObj !== undefined) {\n      // Set that object to the new selected obj\n      if (clickedObj.type !== 'handle') {\n        selectedObjectID = clickedObj.id\n        dispatch(setSelectedObject(clickedObj))\n      }\n    }\n    else if (selectObject.isBeingCropped !== true) {\n      // Clear the selected obj\n      selectedObjectID = undefined\n      dispatch(setSelectedObject(false))\n    }\n  }\n\n  const handleMouseDown = (e) => {\n    // Get the mouse x and y\n    const mousePos = getEventCanvasCoordinates(e)\n    const x = mousePos.x\n    const y = mousePos.y\n\n    const clickedElem = getClickedObj(x, y)\n\n    if ((clickedElem !== undefined && (clickedElem.id === selectedObjectID || clickedElem.parentID === selectedObjectID) && (clickedElem.isBeingCropped === false || clickedElem.isBeingCropped === undefined))) {\n      clickedElem.isBeingDragged = true\n\n      // Get the distance between the mouse and obj position\n      // This can then be used to determine where to start drag from\n      clickedElem.dragStartX = clickedElem.xPos - x\n      clickedElem.dragStartY = clickedElem.yPos - y\n    }\n  }\n\n  const handleMouseUp = (e) => {\n    // On mouse up stop drag on all objects\n    canvasObjects.forEach((obj) => {\n      if (obj.isBeingDragged === true) {\n        const updatedObj = obj\n        updatedObj.isBeingDragged = false\n\n        // Update object position once drag is finished\n        dispatch(updateObject(updatedObj))\n\n        if (obj.type === 'handle' && obj.parentID === selectedObjectID) {\n          updateImageCrop(obj)\n        }\n      }\n    })\n  }\n\n  const handleMouseMove = (e) => {\n    // Get the mouse x and y\n    const mousePos = getEventCanvasCoordinates(e)\n\n    setMouseX(mousePos.x)\n    setMouseY(mousePos.y)\n\n    canvasObjects.forEach((obj) => {\n      if (obj.isBeingDragged === true) {\n        const updatedObj = obj\n\n        // Use the drag start to prevent elem from\n        // always being dragged from top left corner\n        updatedObj.xPos = mousePos.x + updatedObj.dragStartX\n        updatedObj.yPos = mousePos.y + updatedObj.dragStartY\n      }\n    })\n  }\n\n  const getEventCanvasCoordinates = (e) => {\n    let bound = e.target.getBoundingClientRect();\n    let x = e.clientX - bound.left - e.target.clientLeft;\n    let y = e.clientY - bound.top - e.target.clientTop;\n\n    return { x: x, y: y }\n  }\n\n  const touchesObj = (x, y, obj) => {\n    if ((x > obj.xPos && x < obj.xPos + obj.width)\n      && (y > obj.yPos && y < obj.yPos + Number(obj.height))) {\n      return true\n    }\n    return false\n  }\n\n  const getClickedObj = (x, y) => {\n    // Looks for the top level element in the click x, y\n    // Returns the element or undefined if none found\n    let clickedObj = undefined;\n\n    canvasObjects.forEach((obj) => {\n      if (touchesObj(x, y, obj) && (clickedObj === undefined || obj.zIndex > clickedObj.zIndex)) {\n        clickedObj = obj\n      }\n    })\n\n    return clickedObj ? clickedObj : undefined\n  }\n\n  const updateImageCrop = (handle) => {\n    if (handle.handleLocation === 'top') {\n      const topHandleX = handle.xPos\n      const topHandleY = handle.yPos\n\n      console.log(selectObject.xPos)\n      console.log(selectObject.width)\n\n      selectObject.sx = -(selectObject.xPos - topHandleX)\n      selectObject.sy = -(selectObject.yPos - topHandleY)\n\n      selectObject.width -= selectObject.sx\n      selectObject.height -= selectObject.sy\n\n      selectObject.xPos += selectObject.sx\n      selectObject.yPos += selectObject.sy\n\n    }\n    else if (handle.handleLocation === 'bottom') {\n      const bottomHandleX = handle.xPos\n      const bottomHandleY = handle.yPos\n\n      selectObject.sWidth = selectObject.xPos - bottomHandleX\n      selectObject.sHeight = selectObject.yPos - bottomHandleY\n\n    }\n\n    dispatch(updateObject(selectObject))\n  }\n\n  useEffect(() => {\n\n    const canvas = canvasRef.current\n    setCanvas(canvas)\n    canvas.width = canvasWidth\n    canvas.height = canvasHeight\n    const ctx = canvas.getContext('2d')\n    let requestId;\n    let images = {}\n\n    const draw = () => {\n      // Clear the canvas\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n      // Loop through all objects on canvas\n      objectsOnCanvas.sort((a, b) => (a.zIndex - b.zIndex)).forEach((obj) => {\n\n        // If the object is an image\n        if (obj.type === 'image') {\n\n          if (!images[obj.id]) {\n            const img = new Image()\n            img.src = obj.url\n\n            img.onload = () => {\n              images[obj.id] = img\n              ctx.drawImage(img, obj.sx, obj.sy, obj.sWidth, obj.sHeight, obj.xPos, obj.yPos, obj.width, obj.height)\n            }\n            img.onerror = function (err) {\n              console.log(`image failed to load from ${img.src}`);\n            };\n          }\n          else {\n            ctx.drawImage(images[obj.id], obj.sx, obj.sy, obj.sWidth, obj.sHeight, obj.xPos, obj.yPos, obj.width, obj.height)\n          }\n        }\n        // If the object is text\n        else if (obj.type === 'text') {\n          ctx.textBaseline = 'top';\n          ctx.fillStyle = obj.color\n          ctx.font = `${obj.fontSize} ${obj.font}`;\n          ctx.fillText(obj.text, obj.xPos, obj.yPos);\n        }\n        else if (obj.type === 'handle') {\n          ctx.fillStyle = obj.color;\n          ctx.fillRect(obj.xPos, obj.yPos, obj.width, obj.height)\n        }\n\n        // If the object is selected, draw rect around it\n        if (selectedObjectID === obj.id) {\n          ctx.lineWidth = 2;\n          ctx.strokeStyle = 'rgb(0, 100, 250)';\n          ctx.strokeRect(obj.xPos, obj.yPos, obj.width, obj.height)\n        }\n      })\n\n      requestId = requestAnimationFrame(draw);\n    }\n\n    draw()\n\n    return () => {\n      cancelAnimationFrame(requestId);\n    };\n\n  }, [objectsOnCanvas, canvasWidth, canvasHeight, selectedObjectID, setCanvas])\n\n  return (\n    <div className=\"Canvas\">\n      <canvas\n        ref={canvasRef}\n        onMouseDown={(e) => { handleMouseDown(e) }}\n        onMouseLeave={(e) => { handleMouseUp(e) }}\n        onMouseUp={(e) => { handleMouseUp(e) }}\n        onMouseMove={(e) => { handleMouseMove(e) }}\n        onClick={(e) => { handleClick(e) }}\n      />\n      <CanvasDetails\n        width={canvasWidth}\n        height={canvasHeight}\n        setWidth={setCanvasWidth}\n        setHeight={setCanvasHeight}\n        mouseX={mouseX}\n        mouseY={mouseY}\n      />\n    </div>\n  )\n}\n\nexport default Canvas","import './style.css'\nimport EditorButton from '../EditorButton'\nimport SettingsModal from '../SettingsModal'\nimport SettingInput from '../SettingInput'\nimport { useState, useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { setSelectedObject } from '../../actions';\n\nfunction DownloadAsImage(props) {\n  const dispatch = useDispatch()\n  const [linkRef, setLinkRef] = useState('')\n  const [showModal, setShowModal] = useState(false)\n  const [download, setDownload] = useState(`Image-${String(new Date().getTime()).slice(8)}`)\n\n  const downloadCanvas = () => {\n    const canvas = props.canvas\n    const url = canvas.toDataURL(\"image/png\");\n    // I used a ref here because if you use state\n    // Then it doesnt update before linkRef.click()\n    // Is called which causes an empty download to trigger\n    linkRef.href = url\n    linkRef.click()\n    setShowModal(false)\n  }\n\n  // This helper function is necessary because\n  // The setting input sends back an event object\n  // to the changeAction prop we send it which\n  // Cannot be set directly to state\n  const setDownloadValue = (e) => {\n    setDownload(e.target.value)\n  }\n\n  return (\n    <div className=\"DownloadAsImage\">\n      <EditorButton\n        clickAction={() => setShowModal(!showModal)}\n        icon={<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M12 21l-8-9h6v-12h4v12h6l-8 9zm9-1v2h-18v-2h-2v4h22v-4h-2z\" /></svg>}\n        tooltip=\"Download Canvas\"\n      />\n      <a href=\"/\" download={download} ref={a => setLinkRef(a)} className=\"hiddenDownloadLink\">Download Canvas</a>\n      {showModal ?\n        <SettingsModal exitAction={setShowModal} header=\"Download As Image\" contents={\n          <div className=\"downloadModal\">\n            <SettingInput label=\"Filename\" initialVal={download} changeAction={setDownloadValue} />\n            <div className=\"submitButton\"\n              onClick={() => {\n                dispatch(setSelectedObject(false));\n\n                // I use setimeout to give time for the setSelectedObject dispatch\n                // To cause all items to be deselected and for those changes\n                // To show on the canvas\n                setTimeout(\n                  function () {\n                    downloadCanvas()\n                  },\n                  250\n                );\n              }}>Download</div>\n          </div>\n        } />\n        : \"\"}\n    </div >\n  )\n}\n\nexport default DownloadAsImage","import { ADD_OBJECT, REMOVE_OBJECT, CLEAR_OBJECTS, UPDATE_OBJECT } from \"../actions\";\n\nconst canvasObjectsReducer = (state = [], action) => {\n\n\n  switch (action.type) {\n    case ADD_OBJECT:\n\n      const obj = action.payload.obj\n      // Layer the new object on top\n      obj.zIndex = state.length\n\n      return [obj, ...state]\n\n    case UPDATE_OBJECT:\n      console.log(action.payload.obj)\n      const objForUpdate = action.payload.obj\n\n      return state.map((obj) => {\n        if (obj.id === objForUpdate.id) {\n          return objForUpdate\n        }\n        return obj\n      })\n\n    case REMOVE_OBJECT:\n\n      const objToRemove = action.payload.obj\n\n      return state.filter((canvasObject) => {\n        if (canvasObject.id === objToRemove.id) {\n          return false\n        }\n        return true\n      })\n\n    case CLEAR_OBJECTS:\n\n      return []\n\n    default:\n      return state\n  }\n}\n\nexport default canvasObjectsReducer","import { SET_SELECTED_OBJECT } from \"../actions\";\n\nconst selectedObjectReducer = (state = false, action) => {\n\n  switch (action.type) {\n    case SET_SELECTED_OBJECT:\n      return action.payload.obj\n\n    default:\n      return state\n  }\n}\n\nexport default selectedObjectReducer","import { combineReducers } from \"redux\";\nimport canvasObjectsReducer from \"./canvasObjectsReducer\";\nimport selectedObjectReducer from \"./selectedObjectReducer\"\n\nexport default combineReducers({\n  canvasObjects: canvasObjectsReducer,\n  selectedObject: selectedObjectReducer\n})","import ImageUpload from '../ImageUpload'\nimport AddText from '../AddText'\nimport ClearCanvas from '../ClearCanvas'\nimport SelectedObjectToolbar from '../SelectedObjectToolbar'\nimport Canvas from '../Canvas'\nimport VerticalToolbar from '../VerticalToolbar'\nimport DownloadAsImage from '../DownloadAsImage'\n\nimport { useState } from 'react'\nimport { createStore } from 'redux'\nimport { Provider } from 'react-redux'\nimport rootReducer from '../../reducers'\n\nimport './style.css'\n\nconst store = createStore(rootReducer)\n\nfunction App() {\n  const [canvas, setCanvas] = useState('')\n\n  return (\n    <div className=\"App\">\n      <Provider store={store}>\n        <div className=\"editorContainer\">\n          <VerticalToolbar\n            contents={[<AddText />, <ImageUpload />, <DownloadAsImage canvas={canvas} />, <ClearCanvas />]}\n          />\n          <Canvas setCanvas={setCanvas}></Canvas>\n\n          <SelectedObjectToolbar />\n        </div>\n      </Provider>\n    </div>\n  );\n}\n\nexport default App\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}