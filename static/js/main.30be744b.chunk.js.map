{"version":3,"sources":["actions/index.js","components/EditorButton/index.js","components/ImageUpload/index.js","components/AddText/index.js","components/SettingsModal/index.js","components/ClearCanvas/index.js","components/VerticalToolbar/index.js","components/DeleteItem/index.js","components/BringForward/index.js","components/SendBackward/index.js","components/SettingInput/index.js","components/ChangeTextSettings/index.js","components/ChangeImageSettings/index.js","components/Deselect/index.js","components/CropImage/index.js","components/SelectedObjectToolbar/index.js","components/Canvas/index.js","components/DownloadAsImage/index.js","components/CanvasDetails/index.js","reducers/canvasObjectsReducer.js","reducers/selectedObjectReducer.js","reducers/index.js","components/App/index.js","reportWebVitals.js","index.js"],"names":["ADD_OBJECT","REMOVE_OBJECT","CLEAR_OBJECTS","UPDATE_OBJECT","SET_SELECTED_OBJECT","addToCanvas","obj","type","payload","removeFromCanvas","updateObject","setSelectedObject","EditorButton","props","clickAction","icon","tooltip","addonClass","className","onClick","e","title","ImageUpload","dispatch","useDispatch","useState","inputElement","setInputElement","click","xmlns","width","height","viewBox","d","ref","input","onChange","event","id","uuidv4","img","Image","imageFile","File","target","files","src","URL","createObjectURL","console","log","onload","imgObj","url","xPos","yPos","isBeingCropped","isBeingDragged","dragStartX","dragStartY","sizeProportion","sx","sy","sWidth","sHeight","value","handleChange","AddText","text","textObj","font","fontSize","length","color","SettingsModal","contents","exitAction","header","ClearCanvas","modalOpen","setModalOpen","VerticalToolbar","map","element","index","DeleteItem","selectedItem","useSelector","state","selectedObject","fillRule","clipRule","BringForward","zIndex","SendBackward","SettingInput","label","changeAction","initialVal","inputVal","setInputVal","ChangeTextSettings","textColor","setTextColor","setNewTextSize","slice","Number","ChangeImageSettings","scaleProportionally","setScaleProporionally","Math","round","checked","Deselect","CropImage","rectIDs","setRectIDs","createNewRect","x","y","position","handleLocation","parentID","SelectedObjectToolbar","itemSpecificTools","Canvas","setCanvas","setMouseX","setMouseY","canvasWidth","canvasHeight","canvasObjects","selectedObjectID","selectObject","objectsOnCanvas","canvasRef","useRef","handleMouseUp","forEach","updatedObj","updateImageCropHandles","getEventCanvasCoordinates","bound","getBoundingClientRect","clientX","left","clientLeft","clientY","top","clientTop","getClickedObj","clickedObj","undefined","touchesObj","handle","topHandleX","topHandleY","cropXDifference","cropYDifference","bottomHandleX","bottomHandleY","useEffect","canvas","current","requestId","ctx","getContext","images","draw","clearRect","sort","a","b","drawImage","onerror","err","textBaseline","fillStyle","fillText","fillRect","lineWidth","strokeStyle","strokeRect","requestAnimationFrame","cancelAnimationFrame","onMouseDown","mousePos","clickedElem","handleMouseDown","onMouseLeave","onMouseUp","onMouseMove","handleMouseMove","handleClick","DownloadAsImage","linkRef","setLinkRef","showModal","setShowModal","String","Date","getTime","download","setDownload","href","setTimeout","toDataURL","downloadCanvas","CanvasDetails","setWidth","setHeight","mouseX","mouseY","displayedWidth","setDisplayedWidth","displayedHeight","setDisplayedHeight","onBlur","canvasObjectsReducer","action","objForUpdate","objToRemove","filter","canvasObject","revokeObjectURL","selectedObjectReducer","combineReducers","store","createStore","rootReducer","App","setCanvasWidth","setCanvasHeight","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.30be744b.chunk.js","sourcesContent":["export const ADD_OBJECT = 'ADD_OBJECT'\nexport const REMOVE_OBJECT = 'REMOVE_OBJECT'\nexport const CLEAR_OBJECTS = 'CLEAR_OBJECTS'\nexport const UPDATE_OBJECT = 'UPDATE_OBJECT'\nexport const SET_SELECTED_OBJECT = 'SET_SELECTED_OBJECT'\n\nexport const addToCanvas = (obj) => {\n  return {\n    type: ADD_OBJECT,\n    payload: { obj }\n  }\n}\n\nexport const removeFromCanvas = (obj) => {\n  return {\n    type: REMOVE_OBJECT,\n    payload: { obj }\n  }\n}\n\nexport const clearCanvas = (obj) => {\n  return {\n    type: CLEAR_OBJECTS,\n    payload: { obj }\n  }\n}\n\nexport const updateObject = (obj) => {\n  return {\n    type: UPDATE_OBJECT,\n    payload: { obj }\n  }\n}\n\nexport const setSelectedObject = (obj) => {\n  return {\n    type: SET_SELECTED_OBJECT,\n    payload: { obj }\n  }\n}","import './style.css'\n\nfunction EditorButton(props) {\n  const { clickAction, icon, tooltip, addonClass } = props\n\n  return (\n    <div\n      className={`editorButton ${addonClass}`} onClick={(e) => clickAction(e)}\n      title={tooltip}>\n      {icon}\n    </div>\n  )\n}\n\nexport default EditorButton","import { useDispatch } from 'react-redux';\nimport { useState } from 'react'\nimport { addToCanvas, setSelectedObject } from '../../actions';\nimport { v4 as uuidv4 } from 'uuid';\nimport EditorButton from '../EditorButton'\nimport './style.css'\n\nfunction ImageUpload(props) {\n  const dispatch = useDispatch()\n  const [inputElement, setInputElement] = useState();\n\n  const handleChange = (event) => {\n    const id = uuidv4()\n\n    const img = new Image()\n\n    const imageFile = new File([event.target.files[0]], `${id}.png`, { type: event.target.files[0].type });\n    img.src = URL.createObjectURL(imageFile)\n    console.log(img)\n\n\n    img.onload = () => {\n      const imgObj = {\n        type: 'image',\n        id: id,\n        url: img.src,\n        xPos: 0,\n        yPos: 0,\n        width: img.width,\n        height: img.height,\n        isBeingCropped: false,\n        isBeingDragged: false,\n        dragStartX: 0,\n        dragStartY: 0,\n        sizeProportion: img.height / img.width,\n        sx: 0,\n        sy: 0,\n        sWidth: img.width,\n        sHeight: img.height,\n      }\n\n      dispatch(addToCanvas(imgObj))\n      dispatch(setSelectedObject(imgObj))\n      event.target.value = null\n    }\n\n  }\n\n  const uploadFile = (e) => {\n    inputElement.click()\n  }\n\n  return (\n    <div className=\"ImageUpload\">\n\n      <EditorButton\n        clickAction={uploadFile}\n        icon={<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"28\" height=\"28\" viewBox=\"0 0 24 24\"><path d=\"M5 8.5c0-.828.672-1.5 1.5-1.5s1.5.672 1.5 1.5c0 .829-.672 1.5-1.5 1.5s-1.5-.671-1.5-1.5zm9 .5l-2.519 4-2.481-1.96-4 5.96h14l-5-8zm8-4v14h-20v-14h20zm2-2h-24v18h24v-18z\" /></svg>}\n        tooltip=\"Upload Image\"\n      />\n\n      <input\n        className=\"uploadInput\"\n        type=\"file\"\n        ref={input => setInputElement(input)}\n        onChange={(e) => handleChange(e)}\n      />\n    </div>\n  )\n}\n\nexport default ImageUpload","import './style.css'\nimport EditorButton from '../EditorButton'\nimport { useDispatch } from 'react-redux'\nimport { addToCanvas, setSelectedObject } from '../../actions';\nimport { v4 as uuidv4 } from 'uuid';\n\nfunction AddText(props) {\n  const dispatch = useDispatch()\n\n  const addTextToCanvas = () => {\n    const text = 'Hello World'\n    const font = 'monospace'\n    const fontSize = 50\n\n    const textObj = {\n      type: 'text',\n      id: uuidv4(),\n      text: text,\n      font: font,\n      fontSize: `${fontSize}px`,\n      xPos: 10,\n      yPos: fontSize,\n      width: fontSize * 0.6 * text.length,\n      height: fontSize,\n      isBeingDragged: false,\n      dragStartX: 0,\n      dragStartY: 0,\n      color: '#000000'\n    }\n\n    dispatch(addToCanvas(textObj))\n    dispatch(setSelectedObject(textObj))\n  }\n\n  return (\n    <div className=\"AddText\">\n      <EditorButton\n        clickAction={addTextToCanvas}\n        icon={<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M22 0h-20v6h1.999c0-1.174.397-3 2.001-3h4v16.874c0 1.174-.825 2.126-2 2.126h-1v2h9.999v-2h-.999c-1.174 0-2-.952-2-2.126v-16.874h4c1.649 0 2.02 1.826 2.02 3h1.98v-6z\" /></svg>}\n        tooltip=\"Insert Text\"\n      />\n    </div>\n  )\n}\n\nexport default AddText","import './style.css'\n\nfunction SettingsModal(props) {\n  const { contents, exitAction, header } = props\n\n  return (\n    <div className=\"SettingsModal\">\n      <div className='header'>\n        <div className=\"headerTitle\">{header}</div>\n        <div className='closeModal' onClick={() => { exitAction(false) }}>X</div>\n      </div>\n      {contents}\n    </div >\n  )\n}\n\nexport default SettingsModal","import EditorButton from '../EditorButton'\nimport SettingsModal from '../SettingsModal';\nimport { useDispatch } from 'react-redux'\nimport { useState } from 'react'\nimport { clearCanvas } from '../../actions';\n\nimport './style.css'\n\nfunction ClearCanvas(props) {\n  const dispatch = useDispatch()\n  const [modalOpen, setModalOpen] = useState(false)\n\n  return (\n    <div className=\"ClearCanvas\">\n      <EditorButton\n        clickAction={() => setModalOpen(!modalOpen)}\n        icon={<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M24 20.188l-8.315-8.209 8.2-8.282-3.697-3.697-8.212 8.318-8.31-8.203-3.666 3.666 8.321 8.24-8.206 8.313 3.666 3.666 8.237-8.318 8.285 8.203z\" /></svg>}\n        tooltip=\"Clear Canvas\"\n      />\n      {modalOpen ?\n        <SettingsModal header=\"Delete All\" exitAction={setModalOpen}\n          contents={\n            <div className=\"clearCanvasModal\">\n              <div>Are you sure you want to clear the canvas?</div>\n              <div className=\"modalButtonWrapper\">\n                <div className=\"cancelButton modalButton\" onClick={() => setModalOpen(false)}>Cancel</div>\n                <div className=\"clearButton modalButton\"\n                  onClick={() => {\n                    dispatch(clearCanvas())\n                    setModalOpen(false)\n                  }}>Clear</div>\n              </div>\n            </div>\n          }\n        />\n        : \"\"}\n    </div>\n  )\n}\n\nexport default ClearCanvas","import './style.css'\n\nfunction VerticalToolbar(props) {\n\n  return (\n    <div\n      className=\"VerticalToolbar\"\n    >\n      {props.contents.map((element, index) => {\n        return (\n          <div key={index}>{element}</div>\n        )\n      })}\n    </div>\n  )\n}\n\nexport default VerticalToolbar","import EditorButton from '../EditorButton'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { removeFromCanvas, setSelectedObject } from '../../actions';\n\nfunction DeleteItem(props) {\n  const selectedItem = useSelector(state => state.selectedObject)\n  const dispatch = useDispatch()\n\n  return (\n    <div className=\"DeleteItem\">\n      <EditorButton\n        clickAction={\n          () => {\n            dispatch(removeFromCanvas(selectedItem))\n            dispatch(setSelectedObject(false))\n          }}\n        icon={<svg width=\"30\" height=\"24\" xmlns=\"http://www.w3.org/2000/svg\" fillRule=\"evenodd\" clipRule=\"evenodd\"><path d=\"M5.662 23l-5.369-5.365c-.195-.195-.293-.45-.293-.707 0-.256.098-.512.293-.707l14.929-14.928c.195-.194.451-.293.707-.293.255 0 .512.099.707.293l7.071 7.073c.196.195.293.451.293.708 0 .256-.097.511-.293.707l-11.216 11.219h5.514v2h-12.343zm3.657-2l-5.486-5.486-1.419 1.414 4.076 4.072h2.829zm.456-11.429l-4.528 4.528 5.658 5.659 4.527-4.53-5.657-5.657z\" /></svg>}\n        tooltip={`Delete ${selectedItem.type}`}\n      />\n    </div>\n  )\n}\n\nexport default DeleteItem","import EditorButton from '../EditorButton'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { updateObject } from '../../actions';\n\nfunction BringForward(props) {\n  const selectedItem = useSelector(state => state.selectedObject)\n  const dispatch = useDispatch()\n\n  return (\n    <div className=\"BringForward\">\n      <EditorButton\n        clickAction={\n          () => {\n            selectedItem.zIndex += 1\n            dispatch(updateObject(selectedItem))\n          }}\n        icon={<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M12 3l12 18h-24z\" /></svg>}\n        tooltip={`Bring Forward`}\n      />\n    </div>\n  )\n}\n\nexport default BringForward","import EditorButton from '../EditorButton'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { updateObject } from '../../actions';\n\nfunction SendBackward(props) {\n  const selectedItem = useSelector(state => state.selectedObject)\n  const dispatch = useDispatch()\n\n  return (\n    <div className=\"SendBackward\">\n      <EditorButton\n        clickAction={\n          () => {\n            selectedItem.zIndex -= 1\n            dispatch(updateObject(selectedItem))\n          }}\n        icon={<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M12 21l-12-18h24z\" /></svg>}\n        tooltip={`Send Backward`}\n      />\n    </div>\n  )\n}\n\nexport default SendBackward","import { useState } from 'react'\nimport './style.css'\n\nfunction SettingInput(props) {\n  const { label, changeAction, initialVal } = props\n  const [inputVal, setInputVal] = useState(initialVal)\n\n  return (\n    <div>\n      <label>\n        <div>{label}:</div>\n        <input\n          value={inputVal}\n          onChange={\n            (e) => {\n              setInputVal(e.target.value)\n              changeAction(e)\n            }\n          }\n        />\n      </label>\n    </div>\n  )\n}\n\nexport default SettingInput","import EditorButton from '../EditorButton'\nimport SettingsModal from '../SettingsModal'\nimport SettingInput from '../SettingInput'\nimport { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { updateObject } from '../../actions';\nimport './style.css'\n\nfunction ChangeTextSettings(props) {\n  const selectedItem = useSelector(state => state.selectedObject)\n  const [modalOpen, setModalOpen] = useState(false)\n  const [textColor, setTextColor] = useState(selectedItem.color)\n  const dispatch = useDispatch()\n\n  const setNewTextSize = (textObj) => {\n    selectedItem.width = textObj.fontSize.slice(0, -2) * 0.6 * textObj.text.length\n    selectedItem.height = Number(selectedItem.fontSize.slice(0, -2))\n    dispatch(updateObject(selectedItem))\n  }\n\n  return (\n    <div className=\"ChangeTextSettings\">\n      <EditorButton\n        clickAction={() => { setModalOpen(!modalOpen) }}\n        icon={<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M24 20v1h-4v-1h.835c.258 0 .405-.178.321-.422l-.473-1.371h-2.231l-.575-1.59h2.295l-1.362-4.077-1.154 3.451-.879-2.498.921-2.493h2.222l3.033 8.516c.111.315.244.484.578.484h.469zm-6-1h1v2h-7v-2h.532c.459 0 .782-.453.633-.887l-.816-2.113h-6.232l-.815 2.113c-.149.434.174.887.633.887h1.065v2h-7v-2h.43c.593 0 1.123-.375 1.32-.935l5.507-15.065h3.952l5.507 15.065c.197.56.69.935 1.284.935zm-10.886-6h4.238l-2.259-6.199-1.979 6.199z\" /></svg>}\n        tooltip=\"Text Settings\"\n      />\n\n      {modalOpen ?\n        <SettingsModal\n          exitAction={setModalOpen}\n          header=\"Edit Textbox\"\n          contents={\n            <div className=\"modalContents\">\n              <SettingInput\n                label=\"Text\"\n                initialVal={selectedItem.text}\n                changeAction={\n                  (e) => {\n                    selectedItem.text = e.target.value\n                    setNewTextSize(selectedItem)\n                  }\n                }\n              />\n\n              <SettingInput\n                label=\"Size\"\n                initialVal={selectedItem.fontSize.slice(0, -2)}\n                changeAction={\n                  (e) => {\n                    selectedItem.fontSize = e.target.value + 'px'\n                    setNewTextSize(selectedItem)\n                  }\n                }\n              />\n\n              <label>\n                <div>Color:</div>\n                <input\n                  value={textColor}\n                  type=\"color\"\n                  onChange={\n                    (e) => {\n                      setTextColor(e.target.value)\n                      selectedItem.color = e.target.value\n                      dispatch(updateObject(selectedItem))\n                    }\n                  }\n                />\n              </label>\n            </div>\n          } />\n        : ''}\n    </div>\n  )\n}\n\nexport default ChangeTextSettings","import EditorButton from '../EditorButton'\nimport SettingsModal from '../SettingsModal'\nimport SettingInput from '../SettingInput'\nimport { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { setSelectedObject, updateObject } from '../../actions';\nimport './style.css'\n\nfunction ChangeImageSettings(props) {\n  const selectedItem = useSelector(state => state.selectedObject)\n  const [modalOpen, setModalOpen] = useState(false)\n  const [scaleProportionally, setScaleProporionally] = useState(true)\n  const dispatch = useDispatch()\n\n  return (\n    <div className=\"ChangeTextSettings\">\n      <EditorButton\n        clickAction={() => {\n          setModalOpen(!modalOpen)\n        }}\n        icon={<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"30\" height=\"30\" viewBox=\"0 0 24 24\"><path d=\"M15.562 20.22l-3.562.718.719-3.562 2.843 2.844zm-2.136-3.552l2.844 2.845 7.73-7.73-2.845-2.845-7.729 7.73zm-2.91.332l4.51-4.76-2.026-3.24-2.52 4-2.48-1.96-4 5.96h6.516zm-3.516-8.5c0-.828-.672-1.5-1.5-1.5s-1.5.672-1.5 1.5c0 .829.672 1.5 1.5 1.5s1.5-.671 1.5-1.5zm3.352 10.5h-8.352v-14h18v2.312h2v-4.312h-22v18h9.969l.383-2z\" /></svg>}\n        tooltip=\"Image Settings\"\n      />\n\n      {modalOpen ?\n        <SettingsModal\n          exitAction={setModalOpen}\n          header=\"Edit Image\"\n          contents={\n            <div className=\"modalContents\">\n              <SettingInput\n                label=\"Width\"\n                initialVal={selectedItem.width}\n                changeAction={\n                  (e) => {\n                    selectedItem.width = Number(e.target.value)\n                    dispatch(updateObject(selectedItem))\n\n                    if (scaleProportionally) {\n                      selectedItem.height = Math.round(Number(e.target.value * selectedItem.sizeProportion))\n                      console.log(selectedItem.height)\n                    }\n                  }\n                }\n              />\n\n              {\n                scaleProportionally ? '' :\n                  <SettingInput\n                    label=\"Height\"\n                    initialVal={selectedItem.height}\n                    changeAction={\n                      (e) => {\n                        selectedItem.height = Math.round(Number(e.target.value))\n\n                        dispatch(updateObject(selectedItem))\n                      }\n                    }\n                  />\n              }\n\n              {/* Keep image dimensions checkbox */}\n              {/* Add check box */}\n              <label>\n                <div>Scale Proportionally</div>\n                <input\n                  checked={scaleProportionally}\n                  onChange={() => setScaleProporionally(!scaleProportionally)}\n                  type=\"checkbox\"\n                />\n              </label>\n              {/* Display bottom if not check */}\n              {/* If not checked then width slider should also update height based in the image ratio */}\n\n            </div>\n          } />\n        : ''}\n    </div>\n  )\n}\n\nexport default ChangeImageSettings","import EditorButton from '../EditorButton'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { setSelectedObject } from '../../actions';\n\nfunction Deselect(props) {\n  const selectedItem = useSelector(state => state.selectedObject)\n  const dispatch = useDispatch()\n\n  return (\n    <div className=\"Deselect\">\n      <EditorButton\n        clickAction={\n          () => {\n            dispatch(setSelectedObject(false))\n          }}\n        icon={<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M11 24v-2h-4v2h4zm8-22h3v3h2v-5h-5v2zm-19 15h2v-4h-2v4zm0-6h2v-4h-2v4zm2-6v-3h3v-2h-5v5h2zm22 2h-2v4h2v-4zm0 6h-2v4h2v-4zm-2 6v3h-3v2h5v-5h-2zm-17 3h-3v-3h-2v5h5v-2zm12 2v-2h-4v2h4zm-6-22v-2h-4v2h4zm6 0v-2h-4v2h4zm0 11h-10v-2h10v2z\" /></svg>}\n        tooltip={`Deselect ${selectedItem.type}`}\n      />\n    </div>\n  )\n}\n\nexport default Deselect","import EditorButton from '../EditorButton'\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { updateObject, addToCanvas, removeFromCanvas } from '../../actions';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport './style.css'\n\nfunction CropImage(props) {\n  const selectedItem = useSelector(state => state.selectedObject)\n  const dispatch = useDispatch()\n  const [rectIDs, setRectIDs] = useState()\n\n  const createNewRect = (x, y, width, height, position) => {\n    const id = uuidv4()\n\n    dispatch(addToCanvas({\n      type: 'handle',\n      id: id,\n      xPos: x,\n      yPos: y,\n      width: width,\n      height: height,\n      handleLocation: position,\n      isBeingDragged: false,\n      isBeingCropped: false,\n      parentID: selectedItem.id,\n      dragStartX: 0,\n      dragStartY: 0,\n      color: '#ebb134'\n    }))\n\n    return id\n  }\n\n  return (\n    <div className=\"CropImage\">\n      <EditorButton\n        clickAction={\n          () => {\n            selectedItem.isBeingCropped = !selectedItem.isBeingCropped\n            dispatch(updateObject(selectedItem))\n            // If a crop is starting\n            if (selectedItem.isBeingCropped) {\n              setRectIDs([\n                createNewRect(selectedItem.xPos, selectedItem.yPos, 30, 30, 'top'),\n                createNewRect(Number(selectedItem.width) + Number(selectedItem.xPos) - 30, Number(selectedItem.height) + Number(selectedItem.yPos) - 30, 30, 30, 'bottom')\n              ])\n            }\n            else {\n              dispatch(removeFromCanvas({ id: rectIDs[0] }))\n              dispatch(removeFromCanvas({ id: rectIDs[1] }))\n              setRectIDs([])\n            }\n          }\n        }\n        icon={<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"30\" height=\"30\" viewBox=\"0 0 24 24\"><path d=\"M24 18h-4v-14h-14v-4h-2v4h-4v2h4v14h14v4h2v-4h4v-2zm-18 0v-12h12v12h-12zm2-8.5c0-.828.672-1.5 1.5-1.5s1.5.672 1.5 1.5-.672 1.5-1.5 1.5-1.5-.672-1.5-1.5zm5.292.5l-1.812 3.833-1.48-1.272-2 3.439h8.292l-3-6z\" /></svg>}\n        tooltip=\"Crop Image\"\n        addonClass={selectedItem.isBeingCropped ? 'active' : ''}\n      />\n    </div>\n  )\n}\n\nexport default CropImage","import VerticalToolbar from '../VerticalToolbar'\nimport DeleteItem from '../DeleteItem'\nimport BringForward from '../BringForward'\nimport SendBackward from '../SendBackward'\nimport ChangeTextSettings from '../ChangeTextSettings'\nimport ChangeImageSettings from '../ChangeImageSettings'\nimport Deselect from '../Deselect'\nimport CropImage from '../CropImage'\nimport { useSelector } from 'react-redux'\nimport './style.css'\n\nfunction SelectedObjectToolbar(props) {\n\n  const selectedItem = useSelector(state => state.selectedObject)\n\n  const itemSpecificTools = (type) => {\n    switch (type) {\n      case 'text':\n        return [<ChangeTextSettings />]\n      case 'image':\n        return [<ChangeImageSettings />, <CropImage />]\n      default:\n        return []\n    }\n  }\n\n  return (\n    <div className=\"SelectedObjectToolbar\">\n      {\n\n        <VerticalToolbar\n          contents={\n            selectedItem ?\n              [\n                ...itemSpecificTools(selectedItem.type),\n                <BringForward />,\n                <SendBackward />,\n                <Deselect />,\n                < DeleteItem />\n              ]\n              :\n              []\n          }\n        />\n\n      }\n    </div >\n  )\n}\n\nexport default SelectedObjectToolbar","import React, { useRef, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { updateObject, setSelectedObject } from '../../actions';\nimport './style.css'\n\nconst Canvas = (props) => {\n\n  const { setCanvas, setMouseX, setMouseY, canvasWidth, canvasHeight } = props\n  const canvasObjects = useSelector(state => state.canvasObjects)\n  let selectedObjectID = useSelector(state => state.selectedObject).id\n  let selectObject = useSelector(state => state.selectedObject)\n\n  // Get a list of canvas objects\n  const objectsOnCanvas = useSelector(state => state.canvasObjects)\n  const canvasRef = useRef(null)\n  const dispatch = useDispatch()\n\n  const handleClick = (e) => {\n    const mousePos = getEventCanvasCoordinates(e)\n    const clickedObj = getClickedObj(mousePos.x, mousePos.y)\n\n    // If an object was clicked\n    if (clickedObj !== undefined) {\n      // Set that object to the new selected obj\n      if (clickedObj.type !== 'handle') {\n        selectedObjectID = clickedObj.id\n        dispatch(setSelectedObject(clickedObj))\n      }\n    }\n    else if (selectObject.isBeingCropped !== true) {\n      // Clear the selected obj\n      selectedObjectID = undefined\n      dispatch(setSelectedObject(false))\n    }\n  }\n\n  const handleMouseDown = (e) => {\n    // Get the mouse x and y\n    const mousePos = getEventCanvasCoordinates(e)\n    const x = mousePos.x\n    const y = mousePos.y\n\n    const clickedElem = getClickedObj(x, y)\n\n    if ((clickedElem !== undefined && (clickedElem.id === selectedObjectID || clickedElem.parentID === selectedObjectID) && (clickedElem.isBeingCropped === false || clickedElem.isBeingCropped === undefined))) {\n      clickedElem.isBeingDragged = true\n\n      // Get the distance between the mouse and obj position\n      // This can then be used to determine where to start drag from\n      clickedElem.dragStartX = clickedElem.xPos - x\n      clickedElem.dragStartY = clickedElem.yPos - y\n    }\n  }\n\n  const handleMouseUp = (e) => {\n    // On mouse up stop drag on all objects\n    canvasObjects.forEach((obj) => {\n      if (obj.isBeingDragged === true) {\n        const updatedObj = obj\n        updatedObj.isBeingDragged = false\n\n        // Update object position once drag is finished\n        dispatch(updateObject(updatedObj))\n\n        // If a crop has finished then update the image in state\n        if (obj.type === 'handle' && obj.parentID === selectedObjectID) {\n          dispatch(updateObject(selectObject))\n          updateImageCropHandles(obj)\n        }\n      }\n    })\n  }\n\n  const handleMouseMove = (e) => {\n    // Get the mouse x and y\n    const mousePos = getEventCanvasCoordinates(e)\n\n    setMouseX(mousePos.x)\n    setMouseY(mousePos.y)\n\n    canvasObjects.forEach((obj) => {\n      if (obj.isBeingDragged === true) {\n        const updatedObj = obj\n\n        // Use the drag start to prevent elem from\n        // always being dragged from top left corner\n        updatedObj.xPos = mousePos.x + updatedObj.dragStartX\n        updatedObj.yPos = mousePos.y + updatedObj.dragStartY\n\n        // If crop handle is being dragged\n        // Update the image\n        if (obj.type === 'handle' && obj.parentID === selectedObjectID) {\n          updateImageCropHandles(obj)\n        }\n      }\n    })\n  }\n\n  const getEventCanvasCoordinates = (e) => {\n    let bound = e.target.getBoundingClientRect();\n    let x = e.clientX - bound.left - e.target.clientLeft;\n    let y = e.clientY - bound.top - e.target.clientTop;\n\n    return { x: x, y: y }\n  }\n\n  const touchesObj = (x, y, obj) => {\n    if ((x > obj.xPos && x < obj.xPos + obj.width)\n      && (y > obj.yPos && y < obj.yPos + Number(obj.height))) {\n      return true\n    }\n    return false\n  }\n\n  const getClickedObj = (x, y) => {\n    // Looks for the top level element in the click x, y\n    // Returns the element or undefined if none found\n    let clickedObj = undefined;\n\n    canvasObjects.forEach((obj) => {\n      if (touchesObj(x, y, obj) && (clickedObj === undefined || obj.zIndex > clickedObj.zIndex)) {\n        clickedObj = obj\n      }\n    })\n\n    return clickedObj ? clickedObj : undefined\n  }\n\n  const updateImageCropHandles = (handle) => {\n\n    if (handle.handleLocation === 'top') {\n\n      const topHandleX = handle.xPos\n      const topHandleY = handle.yPos\n\n      const cropXDifference = (selectObject.xPos - topHandleX)\n      const cropYDifference = (selectObject.yPos - topHandleY)\n\n      // Move the image to where the handle is\n      selectObject.xPos -= cropXDifference\n      selectObject.yPos -= cropYDifference\n\n      // Adjust the size based on where the handle is\n      selectObject.width += cropXDifference\n      selectObject.height += cropYDifference\n\n      selectObject.sx -= cropXDifference\n      selectObject.sy -= cropYDifference\n\n      selectObject.sWidth += cropXDifference\n      selectObject.sHeight += cropYDifference\n\n    }\n    else if (handle.handleLocation === 'bottom') {\n      const bottomHandleX = handle.xPos\n      const bottomHandleY = handle.yPos\n\n      const cropXDifference = -(selectObject.xPos - bottomHandleX) - selectObject.width + handle.width\n      const cropYDifference = -(selectObject.yPos - bottomHandleY) - selectObject.height + handle.height\n\n      // Adjust the size based on where the handle is\n      selectObject.width += cropXDifference\n      selectObject.height += cropYDifference\n\n      selectObject.sWidth += cropXDifference\n      selectObject.sHeight += cropYDifference\n\n    }\n  }\n\n  useEffect(() => {\n    const canvas = canvasRef.current\n    setCanvas(canvas)\n    canvas.width = canvasWidth\n    canvas.height = canvasHeight\n    const ctx = canvas.getContext('2d')\n    let requestId;\n    let images = {}\n\n    const draw = () => {\n      // Clear the canvas\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n      // Loop through all objects on canvas\n      objectsOnCanvas.sort((a, b) => (a.zIndex - b.zIndex)).forEach((obj) => {\n\n        // If the object is an image\n        if (obj.type === 'image') {\n\n          if (!images[obj.id]) {\n            const img = new Image()\n            img.src = obj.url\n\n            img.onload = () => {\n              images[obj.id] = img\n              ctx.drawImage(img, obj.sx, obj.sy, obj.sWidth, obj.sHeight, obj.xPos, obj.yPos, obj.width, obj.height)\n            }\n            img.onerror = function (err) {\n              console.log(`image failed to load from ${img.src}`);\n            };\n          }\n          else {\n            ctx.drawImage(images[obj.id], obj.sx, obj.sy, obj.sWidth, obj.sHeight, obj.xPos, obj.yPos, obj.width, obj.height)\n          }\n        }\n        // If the object is text draw the text\n        else if (obj.type === 'text') {\n          ctx.textBaseline = 'top';\n          ctx.fillStyle = obj.color\n          ctx.font = `${obj.fontSize} ${obj.font}`;\n          ctx.fillText(obj.text, obj.xPos, obj.yPos);\n        }\n        // If the object is a handle draw the handle\n        else if (obj.type === 'handle') {\n          ctx.fillStyle = obj.color;\n          ctx.fillRect(obj.xPos, obj.yPos, obj.width, obj.height)\n        }\n\n        // If the object is selected, draw blue selected rect around it\n        if (selectedObjectID === obj.id) {\n          ctx.lineWidth = 2;\n          ctx.strokeStyle = obj.isBeingCropped ? 'rgb(233, 177, 52)' : 'rgb(0, 100, 250)';\n          ctx.strokeRect(obj.xPos, obj.yPos, obj.width, obj.height)\n        }\n      })\n\n      requestId = requestAnimationFrame(draw);\n    }\n\n    draw()\n\n    return () => {\n      cancelAnimationFrame(requestId);\n    };\n\n  }, [objectsOnCanvas, canvasWidth, canvasHeight, selectedObjectID, setCanvas])\n\n  return (\n    <div className=\"Canvas\">\n      <canvas\n        ref={canvasRef}\n        onMouseDown={(e) => { handleMouseDown(e) }}\n        onMouseLeave={(e) => { handleMouseUp(e) }}\n        onMouseUp={(e) => { handleMouseUp(e) }}\n        onMouseMove={(e) => { handleMouseMove(e) }}\n        onClick={(e) => { handleClick(e) }}\n      />\n    </div>\n  )\n}\n\nexport default Canvas","import './style.css'\nimport EditorButton from '../EditorButton'\nimport SettingsModal from '../SettingsModal'\nimport SettingInput from '../SettingInput'\nimport { useState, useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { setSelectedObject } from '../../actions';\n\nfunction DownloadAsImage(props) {\n  const dispatch = useDispatch()\n  const [linkRef, setLinkRef] = useState('')\n  const [showModal, setShowModal] = useState(false)\n  const [download, setDownload] = useState(`Image-${String(new Date().getTime()).slice(8)}`)\n\n  const downloadCanvas = () => {\n    const canvas = props.canvas\n    const url = canvas.toDataURL(\"image/png\");\n    // I used a ref here because if you use state\n    // Then it doesnt update before linkRef.click()\n    // Is called which causes an empty download to trigger\n    linkRef.href = url\n    linkRef.click()\n    setShowModal(false)\n  }\n\n  // This helper function is necessary because\n  // The setting input sends back an event object\n  // to the changeAction prop we send it which\n  // Cannot be set directly to state\n  const setDownloadValue = (e) => {\n    setDownload(e.target.value)\n  }\n\n  return (\n    <div className=\"DownloadAsImage\">\n      <EditorButton\n        clickAction={() => setShowModal(!showModal)}\n        icon={<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M12 21l-8-9h6v-12h4v12h6l-8 9zm9-1v2h-18v-2h-2v4h22v-4h-2z\" /></svg>}\n        tooltip=\"Download Canvas\"\n      />\n      <a href=\"/\" download={download} ref={a => setLinkRef(a)} className=\"hiddenDownloadLink\">Download Canvas</a>\n      {showModal ?\n        <SettingsModal exitAction={setShowModal} header=\"Download As Image\" contents={\n          <div className=\"downloadModal\">\n            <SettingInput label=\"Filename\" initialVal={download} changeAction={setDownloadValue} />\n            <div className=\"submitButton\"\n              onClick={() => {\n                dispatch(setSelectedObject(false));\n\n                // I use setimeout to give time for the setSelectedObject dispatch\n                // To cause all items to be deselected and for those changes\n                // To show on the canvas\n                setTimeout(\n                  function () {\n                    downloadCanvas()\n                  },\n                  250\n                );\n              }}>Download</div>\n          </div>\n        } />\n        : \"\"}\n    </div >\n  )\n}\n\nexport default DownloadAsImage","import React, { useState } from 'react'\nimport './style.css'\n\nfunction CanvasDetails(props) {\n  const { width, height, setWidth, setHeight, mouseX, mouseY } = props\n  const [displayedWidth, setDisplayedWidth] = useState(width)\n  const [displayedHeight, setDisplayedHeight] = useState(height)\n\n  return (\n    <div className=\"CanvasDetails\">\n      <div className=\"sizeDetailWrapper\">\n        <div className=\"sizeDetail\">\n          <p>Width:</p>\n          <input\n            className=\"sizeInput\"\n            value={displayedWidth}\n            onBlur={(e) => { setWidth(e.target.value) }}\n            onChange={(e) => setDisplayedWidth(e.target.value)}\n          />\n        </div>\n        <div className=\"sizeDetail\">\n          <p>Height:</p>\n          <input\n            className=\"sizeInput\"\n            value={displayedHeight}\n            onBlur={(e) => { setHeight(e.target.value) }}\n            onChange={(e) => setDisplayedHeight(e.target.value)}\n          />\n        </div>\n      </div>\n      <p>X: {mouseX}, Y: {mouseY}</p>\n    </div>\n  )\n}\n\nexport default CanvasDetails","import { ADD_OBJECT, REMOVE_OBJECT, CLEAR_OBJECTS, UPDATE_OBJECT } from \"../actions\";\n\nconst canvasObjectsReducer = (state = [], action) => {\n\n\n  switch (action.type) {\n    case ADD_OBJECT:\n\n      const obj = action.payload.obj\n      // Layer the new object on top\n      obj.zIndex = state.length\n\n      return [obj, ...state]\n\n    case UPDATE_OBJECT:\n      console.log(action.payload.obj)\n      const objForUpdate = action.payload.obj\n\n      return state.map((obj) => {\n        if (obj.id === objForUpdate.id) {\n          return objForUpdate\n        }\n        return obj\n      })\n\n    case REMOVE_OBJECT:\n\n      const objToRemove = action.payload.obj\n\n      return state.filter((canvasObject) => {\n        if (canvasObject.id === objToRemove.id) {\n\n          // Delete all objectURLs to free up memory \n          // from deleted images\n          if (canvasObject.type === 'image') {\n            URL.revokeObjectURL(canvasObject.url)\n          }\n\n          return false\n        }\n        return true\n      })\n\n    case CLEAR_OBJECTS:\n\n      // Delete all objectURLs to free up memory\n      // from deleted images\n      state.forEach((canvasObject) => {\n        if (canvasObject.type === 'image') {\n          URL.revokeObjectURL(canvasObject.url)\n        }\n      })\n\n\n      return []\n\n    default:\n      return state\n  }\n}\n\nexport default canvasObjectsReducer","import { SET_SELECTED_OBJECT } from \"../actions\";\n\nconst selectedObjectReducer = (state = false, action) => {\n\n  switch (action.type) {\n    case SET_SELECTED_OBJECT:\n      return action.payload.obj\n\n    default:\n      return state\n  }\n}\n\nexport default selectedObjectReducer","import { combineReducers } from \"redux\";\nimport canvasObjectsReducer from \"./canvasObjectsReducer\";\nimport selectedObjectReducer from \"./selectedObjectReducer\"\n\nexport default combineReducers({\n  canvasObjects: canvasObjectsReducer,\n  selectedObject: selectedObjectReducer\n})","import ImageUpload from '../ImageUpload'\nimport AddText from '../AddText'\nimport ClearCanvas from '../ClearCanvas'\nimport SelectedObjectToolbar from '../SelectedObjectToolbar'\nimport Canvas from '../Canvas'\nimport VerticalToolbar from '../VerticalToolbar'\nimport DownloadAsImage from '../DownloadAsImage'\nimport CanvasDetails from '../CanvasDetails'\n\nimport { useState } from 'react'\nimport { createStore } from 'redux'\nimport { Provider } from 'react-redux'\nimport rootReducer from '../../reducers'\n\nimport './style.css'\n\nconst store = createStore(rootReducer)\n\nfunction App() {\n  const [canvas, setCanvas] = useState('')\n\n  const [canvasWidth, setCanvasWidth] = useState(800)\n  const [canvasHeight, setCanvasHeight] = useState(600)\n  const [mouseX, setMouseX] = useState(0)\n  const [mouseY, setMouseY] = useState(0)\n\n  return (\n    <div className=\"App\">\n      <Provider store={store}>\n        <div className=\"editorContainer\">\n          <VerticalToolbar\n            contents={[<AddText />, <ImageUpload />, <DownloadAsImage canvas={canvas} />, <ClearCanvas />]}\n          />\n          <div className=\"CanvasContainer\">\n            <div className=\"canvasWrapper\">\n              <Canvas\n                setCanvas={setCanvas}\n                canvasWidth={canvasWidth}\n                canvasHeight={canvasHeight}\n                setCanvasWidth={setCanvasWidth}\n                setCanvasHeight={setCanvasHeight}\n                mouseX={mouseX}\n                mouseY={mouseY}\n                setMouseX={setMouseX}\n                setMouseY={setMouseY}\n              >\n              </Canvas>\n            </div>\n\n            <CanvasDetails\n              width={canvasWidth}\n              height={canvasHeight}\n              setWidth={setCanvasWidth}\n              setHeight={setCanvasHeight}\n              mouseX={mouseX}\n              mouseY={mouseY}\n            />\n          </div>\n\n          <SelectedObjectToolbar />\n        </div>\n      </Provider>\n    </div>\n  );\n}\n\nexport default App\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}